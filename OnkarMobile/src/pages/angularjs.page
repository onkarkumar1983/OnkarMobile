<apex:page controller="controllerCls">
<apex:includeScript value="{!URLFOR($Resource.anjularjs, '/angular-1.2.18/angular.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.JQUery, '/jquery-ui-1.10.4.custom/js/jquery-1.10.2.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.JQUery, '/jquery-ui-1.10.4.custom/js/jquery-ui-1.10.4.custom.js')}"/>
<apex:stylesheet value="{!URLFOR($Resource.bootstrapsfdc, '/bootstrapSfdc/css/SFDCbootstrap.css')}"/>
<apex:includeScript value="{!URLFOR($Resource.bootstrapsfdc, '/bootstrapSfdc/js/bootstrap.min.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.bootstrapsfdc, '/bootstrapSfdc/js/bootstrap.js')}"/>
<apex:sectionHeader title="Account List" subtitle="Account"/>

<div class="bootstrap-sfdc" style=" background-color: #fff;margin-top: 10px;" ng-app="app">
<nav class="navbar navbar-default" ng-controller="CalculatorController as account">
     <div>
     <ul class = "list-group">
          <li class="list-group-item" ng-repeat="product in data"> {{product.Name}} </li>
      </ul>
 
 </div>
  <div class="navbar-header">
     <a href="#" class="navbar-brand">Search Account</a>
   </div>
    <form class="navbar-form" role="search">
     <div class="form-group">
        <input type="text" class="form-control" placeholder="Search"/>
      </div>
          <button type="submit" class="btn btn-default">Submit</button>
          <button type="button" class="btn btn-default btn-xl" id="optionBtn">
          <span class=" glyphicon glyphicon-list" aria-hidden="true"></span>&nbsp;Show in List</button>
          <button type="button" class="btn btn-default btn-xl" id="optionBtn1">
          <span class="glyphicon glyphicon-th-large" aria-hidden="true"></span>&nbsp;Show in Grid</button>
          <button ng-click="doSquare()" class="btn btn-default btn-xl">Click Here...</button>
    </form>
</nav>
    <div class="panel panel-default">
      <div class="panel-body">
      
<!-- Grid Start -->
<div class="container-fluid" id="effect">
    <div class="row">    
      <apex:repeat value="{!Accounts}" var="Ac">
              <div class="col-md-auto col-md-4" style="height:150px">
                <div class="thumbnail panel panel-primary">
                  
                  <div class="caption">
                    <h4>{!Ac.Name}</h4>
                    <p>${!Ac.Amount} USD</p>
                    <p><a href="#" class="btn btn-primary btn-xs" role="button">
                    <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Edit 
                    </a>
                    <a href="#" class="btn btn-default btn-xs" role="button">
                    <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                    Delete </a></p>
                  </div>
                </div>
            </div>
      </apex:repeat>    
    </div>
</div>
<!-- Grid End -->
<!-- Table Start -->
<div class="container-fluid" id="effect1" style="display:none">
<table class="table table-hover">
         <thead>
        <tr>
            <th data-field="id">Action</th>
            <th data-field="id">Name</th>
            <th data-field="name">Amount</th>
            
        </tr>
    </thead>
     <apex:repeat value="{!Accounts}" var="Ac">
         <tr>
             <td>
                 <p><a href="#" class="btn btn-primary btn-xs" role="button">
                    <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Edit 
                    </a>
                    <a href="#" class="btn btn-default btn-xs" role="button">
                    <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                    Delete </a></p>
             </td>
             <td>
                 {!Ac.Name}
             </td>
              <td>
                 {!Ac.Amount}
             </td>
             
         </tr>
     </apex:repeat>
</table>
</div>
<!-- Table End -->
      </div>
    </div>
</div>
<script>
    $(function() {
         $( "#optionBtn" ).click(function() {
              //getRemoteAccount();
              $( "#optionBtn" ).removeClass();
              $( "#optionBtn").addClass("btn btn-primary btn-xl");
              $( "#optionBtn1" ).removeClass();
              $( "#optionBtn1").addClass("btn btn-default btn-xl");
              
              options = { to: { width: 200, height: 60 } };
              $( "#effect" ).effect( "drop", options);
              $( "#effect1" ).show( "drop", options, 500 );
          });
          $( "#optionBtn1" ).click(function() {
              $( "#optionBtn1" ).removeClass();
              $( "#optionBtn1").addClass("btn btn-primary btn-xl");
              $( "#optionBtn" ).removeClass();
              $( "#optionBtn").addClass("btn btn-default btn-xl");
             options = { to: { width: 280, height: 185 } };
             $( "#effect" ).show( "drop", options, 500 );
             $( "#effect1" ).effect( "drop", options);
          });
           
       
    });
</script>
<script type="text/javascript">

    Visualforce.remoting.timeout = 120000; // Set timeout at page level
    var data;
    function getRemoteAccount() {
 
        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.controllerCls.getAccountsJSON}',handleResult
       
        );
        return handleResult;
    }

    function handleResult(result, event) {
        data =  htmlDecode(result);
    }
    function htmlDecode(value) {
        if (value) {
            return $('<div />').html(value).text();
        } else {
            return '';
        }
    }
var app = angular.module('app', []);

app.service('MathService', function() {

    this.add = function(a, b) { return a + b };
    
    this.subtract = function(a, b) { return a - b };
    
    this.multiply = function(a, b) { return a * b };
    
    this.divide = function(a, b) { return a / b };
    
    this.resultSFDC = function(){ return eval(data)};
});

app.service('CalculatorService', function(MathService){
    
    this.square = function(a)  { return MathService.multiply(a,a); };
    this.cube = function(a)    { return MathService.multiply(a, MathService.multiply(a,a)); };
    this.result = function()    { return MathService.resultSFDC();};

});

    app.controller('CalculatorController', function($scope, CalculatorService) {

    $scope.doSquare = function() {
        alert(CalculatorService.result());
        $scope.data = CalculatorService.result();
         alert("Hello");
        $scope.answer = CalculatorService.square($scope.number);
    }

    $scope.doCube = function() {
        $scope.answer = CalculatorService.cube($scope.number);
    }
});
    
</script>
</apex:page>