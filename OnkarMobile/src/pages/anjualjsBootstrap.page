<apex:page showHeader="true" sidebar="true" controller="controllerCls" docType="html-5.0">
<apex:includeScript value="{!URLFOR($Resource.JQUery, '/jquery-ui-1.10.4.custom/js/jquery-1.10.2.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.anjularjs, '/angular-1.2.18/angular.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.bootstrapsfdc, '/bootstrapSfdc/js/ui-bootstrap-tpls-0.12.0-1.js')}"/>
<apex:stylesheet value="{!URLFOR($Resource.bootstrapsfdc, '/bootstrapSfdc/css/SFDCbootstrap.css')}"/>

<div class="bootstrap-sfdc" id="bootstrap-sfdc" name="bootstrap-sfdc" ng-app="ui.bootstrap.demo">
<nav class="navbar navbar-default">
         <div class="navbar-header">
             <a href="#" class="navbar-brand">Search Account</a>
         </div>
          <form class="navbar-form" role="search">
              <div class="form-group">
                <input type="text" class="form-control" placeholder="Search" ng-model="searchText"/>
              </div>
              <button type="button" class="btn btn-default btn-xl" id="optionBtn">
                  <span class=" glyphicon glyphicon-list" aria-hidden="true"></span>&nbsp;Show in List
              </button>
              <button type="button" class="btn btn-default btn-xl" id="optionBtn1">
                  <span class="glyphicon glyphicon-th-large" aria-hidden="true"></span>&nbsp;Show in Grid
              </button>
          </form>
     </nav>
<!-- Code for Modal -->
<div ng-controller="ModalDemoCtrl">
    <script type="text/ng-template" id="myModalContent.html">
        <div class="modal-header">
            <button type="button" class="close" ng-click="cancel()" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h3 class="modal-title">{{selected.item.item.Name}}</h3>
        </div>
            <!--<img src="http://sfdc-styleguide.herokuapp.com/assets/icons/standard/opportunity.svg"/>-->
        <div class="modal-body">
            <div class="form-group">
                <label for="recipient-name" class="control-label">Opportunity Name: {{items}}</label>
                <input type="text" class="form-control" id="name" ng-model="selected.item.item.Name"/>
            </div>
            <div class="form-group">
                <label for="message-text" class="control-label">Amount:</label>
                <input class="form-control" id="amount" ng-model="selected.item.item.Amount"></input>
            </div>
            <div class="form-group">
            <label for="message-text" class="control-label">Close date:</label>
            <div class="row">
                <div class="col-md-6">
                    <p class="input-group">
                        <input type="date" class="form-control" datepicker-popup="{{format}}" ng-model="dt" is-open="opened" min-date="minDate" max-date="'2015-06-22'" datepicker-options="dateOptions"  data-date-format="mm/dd/yyyy" date-disabled="disabled(date, mode)" ng-required="true" close-text="Close" value="{{ dt | date: 'dd/MM/yyyy' }}"/>
                        <span class="input-group-btn">
                        <button type="button" class="btn btn-primary" ng-click="openDate($event)"><i class="glyphicon glyphicon-calendar"></i></button>
                        </span>
                    </p>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label for="message-text" class="control-label">Description:</label>
            <textarea class="form-control" id="description" ng-model="selected.item.item.Description"></textarea>
        </div>
        </div>
        <div class="modal-footer">
            <button class="btn btn-primary" ng-click="ok()">OK</button>
            <button class="btn btn-warning" ng-click="cancel()">Cancel</button>
        </div>
    </script>
<!-- End Code for Modal -->
<!-- Code for Delete Modal -->

<div ng-controller="ModalDemoCtrl">
        <script type="text/ng-template" id="deleteModal.html">
          <div class="modal-header">
            <button type="button" class="close" ng-click="cancel()" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title">Delete</h4>
          </div>
          <div class="modal-body">
            <p>Do you Want to delete Record -: {{selected.item.item.Name}}</p>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary">Save changes</button>
          </div>
        </script>
</div>
<!-- Code for Delete Modal -->

    <div class="container-fluid" id="effect">
        <div class="row">
            <div ng-repeat = "Ac in items | filter:searchText">
                <div class="col-md-auto col-md-4">
                    <div class="thumbnail panel panel-warning">
                        <div class="caption" style="height:auto">
                          <h4> {{Ac.Name}} </h4>
                          <p>$ {{Ac.Amount}} USD</p>
                          <p>
                          Close Date {{Ac.CloseDate  | date : 'MMM-dd-yyyy'}}
                          </p>
                          <p>{{Ac.Account.Name}}</p>
                          
                          <p><a href="#" class="btn btn-primary btn-xs"  type="button"  ng-click="selected.item = Ac;open()">
                          <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Edit 
                          </a>
                          <a href="#" class="btn btn-default btn-xs" role="button"  ng-click="selected.item = Ac;delete()">
                          <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                           Delete </a></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
    </div>
 <script>
    angular.module('ui.bootstrap.demo', ['ui.bootstrap']);
    function htmlDecode(value) {
        if (value) {
            return $('<div />').html(value).text();
        } else {
            return '';
        }
    }
    angular.module('ui.bootstrap.demo').factory("SFDCfactory_update",["$q","$rootScope", function($q,$rootScope) {
        var selectedItem;
           return function (selectedItem){
                
                 var deferred = $q.defer();
                 Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.controllerCls.updateAccount}',angular.toJson(selectedItem),
                    function(result, event){
                       $rootScope.$apply(function() {
                          if (event.status){
                            deferred.resolve(result);
                          } else {
                            deferred.reject(event);
                          }
                        })
                    },
               { buffer: true, escape: true, timeout: 30000 }
                
                );
                 return deferred.promise;
            }
    }]);
    angular.module('ui.bootstrap.demo').factory("SFDCfactory",["$q","$rootScope", function($q,$rootScope) {
       return function (){
             var deferred = $q.defer();
             Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.controllerCls.getAccountsJSON}',
                function(result, event){
                   $rootScope.$apply(function() {
                      if (event.status){
                        deferred.resolve(result);
                      } else {
                        deferred.reject(event);
                      }
                    })
                },
           { buffer: true, escape: true, timeout: 30000 }
            
            );
             return deferred.promise;
        }
    }]);

    angular.module('ui.bootstrap.demo').controller('ModalDemoCtrl', function ($scope, $modal, $log,SFDCfactory) {
        SFDCfactory().then(
                function(result) 
                {
                    $scope.items = JSON.parse(htmlDecode(result));
                    $scope.selected = {
                        item: $scope.items[0]
                    };
                },
            function(error)  {$scope.items = 'ERROR: ' + error.message;}
        )
   
        $scope.open = function (size) {
                var modalInstance = $modal.open({
                      templateUrl: 'myModalContent.html',
                      controller: 'ModalInstanceCtrl',
                      size: size,
                      resolve: {
                        selected: function () {
                          return $scope.selected;
                        }
                      }
                });
            
                modalInstance.result.then(function (selectedItem) {
                  $scope.selected = selectedItem;
                }, function () {
                  $log.info('Modal dismissed at: ' + new Date());
                });
          };
          $scope.delete = function (size) {
                var modalInstance = $modal.open({
                      templateUrl: 'deleteModal.html',
                      controller: 'ModalInstanceCtrl',
                      size: size,
                      resolve: {
                        selected: function () {
                          return $scope.selected;
                        }
                      }
                });
            
                modalInstance.result.then(function (selectedItem) {
                  $scope.selected = selectedItem;
                }, function () {
                  $log.info('Modal dismissed at: ' + new Date());
                });
          };
});

// Please note that $modalInstance represents a modal window (instance) dependency.
// It is not the same as the $modal service used above.

angular.module('ui.bootstrap.demo').controller('ModalInstanceCtrl', function ($scope, $modalInstance, selected,SFDCfactory_update) {

      $scope.selected = {
        item: selected
      };

       
      $scope.ok = function (){
        var D2 = new Date($scope.dt);

        selected.item.CloseDate = D2.getFullYear() + "-" + D2.getMonth()+"-" + D2.getDate();
        SFDCfactory_update(selected.item).then(
                function(result) 
                {
                    $scope.items = JSON.parse(htmlDecode(selected.item));
                },
                function(error)  {$scope.items = 'ERROR: ' + error.message;}
            )
            $modalInstance.close(selected.item);
      };

      $scope.cancel = function () {
        $modalInstance.dismiss('cancel');
      };

     /* Date Start */
    
    $scope.today = function() {
        $scope.dt = new Date(selected.item.CloseDate);
    };
    $scope.today();

    $scope.clear = function () {
        $scope.dt = null;
    };

  // Disable weekend selection
    $scope.disabled = function(date, mode) {
        return ( mode === 'day' && ( date.getDay() === 0 || date.getDay() === 6 ) );
    };

    $scope.toggleMin = function() {
        $scope.minDate = $scope.minDate ? null : new Date();
    };
    $scope.toggleMin();

    $scope.openDate = function($event) {
        $event.preventDefault();
        $event.stopPropagation();

        $scope.opened = true;
    };

    $scope.dateOptions = {
        formatYear: 'yy',
        startingDay: 1
    };

    $scope.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];
    $scope.format = $scope.formats[0];
   /* Date End */   

    });


  </script>

</apex:page>